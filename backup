#!/bin/bash

if [ -z "$COOG_CODE_DIR" ] || [ ! -d "$COOG_CODE_DIR" ] || [ -z "$COOG_DATA_DIR" ]
then
    {
        echo "Please make sure that these two env vars are set:"
        echo "  COOG_CODE_DIR: your coog-admin install folder"
        echo "  COOG_DATA_DIR: the folder where to keep your custom config"
    } >&2 && exit 1
fi

dump_database() {
    if "$COOG_CODE_DIR/postgres dump" -Fc > "$BACKUP_DIRECTORY/$1"; then
        echo "dump db -> OK"
    else
        echo "dump db -> KO"
    fi
}

dump_attachments() {
    SECONDS=0
    docker run -i --rm \
        -v /tmp:/tmp \
        --volumes-from "$NETWORK"-coog-server \
        alpine:3.6 \
        tar czf /tmp/"$1" /workspace/io/edm/"$COOG_DB_NAME" &&
        cp /tmp/"$1" "$BACKUP_DIRECTORY/" &&
        echo "dump attachments -> OK" ||
        echo "dump attachments -> KO"
    duration=$SECONDS
    echo "job time :$(($duration / 60)) min $(($duration % 60)) s"
}

usage() {
    echo
    echo "Available command:"
    echo
    echo "  save    -> Backup database and attachments in $BACKUP_DIRECTORY/"
    echo "  clean   -> Remove old backups "
    echo
}

save() {
    source "$COOG_CODE_DIR/config"
    [[ $# -ne 0 ]] && usage && exit 1

    [ ! -d "$BACKUP_DIRECTORY" ] && mkdir -p "$BACKUP_DIRECTORY"

    # check if there is a yearly backup
    YEAR=$(date '+%Y')
    if [ $(ls -1 $BACKUP_DIRECTORY/ | grep -c "year-$YEAR-db") -eq 0 ];
    then
        echo "saving yearly db and attachments"
        dump_database "year-$YEAR-db-$USER-$COOG_DB_NAME.dump.gz"
        dump_attachments "year-$YEAR-attachments-$USER-$COOG_DB_NAME.tar.gz"
    fi

    # check if there is a monthly backup
    MONTH=$(date '+%Y%m')
    if [ $(ls -1 $BACKUP_DIRECTORY/ | grep -c "month-$MONTH-db") -eq 0 ];
    then
        echo "saving monthly db and attachments"
        dump_database "month-$MONTH-db-$USER-$COOG_DB_NAME.dump.gz"
        dump_attachments "month-$MONTH-attachments-$USER-$COOG_DB_NAME.tar.gz"
    fi

    # weekly backup on Friday
    WEEK=$(date '+%V')
    if [[ $(date '+%u') == 5 ]]; then
        echo "saving weekly db and attachments"
        dump_database "week-$WEEK-db-$USER-$COOG_DB_NAME.dump.gz"
        dump_attachments "week-$WEEK-attachments-$USER-$COOG_DB_NAME.tar.gz"
    fi

    echo "saving daily db and attachments"
    dump_database "$(date '+%Y%m%d')-daily-db-$USER-$COOG_DB_NAME.dump.gz"
    dump_attachments "$(date '+%Y%m%d')-daily-attachments-$USER-$COOG_DB_NAME.tar.gz"
}

clean() {
    source "$COOG_CODE_DIR/config"
    [[ $# -ne 0 ]] && usage && exit 1

    stock_daily_db="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'daily\-db') - 7)"
    stock_weekly_db="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'week.*db') - 4)"
    stock_monthly_db="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'month.*db') - 3)"
    stock_yearly_db="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'year.*db') - 2)"

    stock_daily_attach="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'daily\-attachments') - 7)"
    stock_weekly_attach="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'week.*attachments') - 4)"
    stock_monthly_attach="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'month.*attachments') - 3)"
    stock_yearly_attach="$(expr $(ls -1 $BACKUP_DIRECTORY/ | grep -c 'year.*attachments') - 2)"

    if [[ $stock_daily_db -gt 0 ]]; then
        echo "cleaning daily db"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*daily-db* | tail -$stock_daily_db)
    fi

    if [[ $stock_weekly_db -gt 0 ]]; then
        echo "cleaning weekly db"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*week*db* | tail -$stock_weekly_db)
    fi

    if [[ $stock_monthly_db -gt 0 ]]; then
        echo "cleaning monthly db"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*month*db* | tail -$stock_monthly_db)
    fi

    if [[ $stock_yearly_db -gt 0 ]]; then
        echo "cleaning yearly db"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*year*db* | tail -$stock_yearly_db)
    fi

    if [[ $stock_daily_attach -gt 0 ]]; then
        echo "clean daily attachments"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*daily-attachments* | tail -$stock_daily_attach)
    fi

    if [[ $stock_weekly_attach -gt 0 ]]; then
        echo "cleaning weekly attachments"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*week*attachments* | tail -$stock_weekly_db)
    fi

    if [[ $stock_monthly_attach -gt 0 ]]; then
        echo "cleaning monthly attachments"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*month*attachments* | tail -$stock_monthly_db)
    fi

    if [[ $stock_yearly_attach -gt 0 ]]; then
        echo "cleaning yearly attachments"
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*year*attachments* | tail -$stock_yearly_db)
    fi
}

main() {
    [ -z "$1" ] && usage && return 0
    local cmd; cmd=$1; shift
    [ "$cmd" = "save" ] && { save "$@"; return $?; }
    [ "$cmd" = "clean" ] && { clean "$@"; return $?; }
    action "$cmd" "$@"
}

main "$@"
