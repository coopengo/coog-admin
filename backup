#!/bin/bash

get_dir() {
    local script_path; script_path=$(readlink -f "$0")
    local script_dir; script_dir=$(dirname "$script_path")
    echo "$script_dir"
}

dump_database() {
    "$(get_dir)"/postgres dump -Fc > "$BACKUP_DIRECTORY/$1"
}

dump_attachments() {
    docker run -it --rm \
        -v /tmp:/tmp \
        --volumes-from "$USER"-coog-server \
        alpine:3.6 \
        tar czf /tmp/"$1" /workspace/io/edm/"$COOG_DB_NAME" &&
        cp /tmp/"$1" "$BACKUP_DIRECTORY/"
}

usage() {
    echo
    echo "Available command:"
    echo
    echo "  save    -> Backup database and attachments in $BACKUP_DIRECTORY/"
    echo "  clean   -> Remove old backups "
    echo
}

save() {
    source "$(get_dir)/config"
    [[ $# -ne 0 ]] && usage && exit 1

    [ ! -d "$BACKUP_DIRECTORY" ] && mkdir -p "$BACKUP_DIRECTORY"

    if [[ $(date '+%m%d') == 0101 ]]; then
        dump_database "$(date '+%Y')-db-$USER-$COOG_DB_NAME.dump.gz"
        dump_attachments "$(date '+%Y')-attachments-$USER-$COOG_DB_NAME.tar.gz"
    fi

    if [[ $(date '+%d') == 01 ]]; then
        dump_database "$(date '+%Y%m')-db-$USER-$COOG_DB_NAME.dump.gz"
        dump_attachments "$(date '+%Y%m')-attachments-$USER-$COOG_DB_NAME.tar.gz"
    fi

    if [[ $(date '+%u') == 0 ]]; then
        dump_database "week-$(date '+%V')-db-$USER-$COOG_DB_NAME.dump.gz"
        dump_attachments "$week-(date '+%V')-attachments-$USER-$COOG_DB_NAME.tar.gz"
    fi

    dump_database "$(date '+%Y%m%d')-daily-db-$USER-$COOG_DB_NAME.dump.gz"
    dump_attachments "$(date '+%Y%m%d')-daily-attachments-$USER-$COOG_DB_NAME.tar.gz"
}

clean() {
    source "$(get_dir)/config"
    [[ $# -ne 0 ]] && usage && exit 1

    stock_db="$(expr $(ls -d $BACKUP_DIRECTORY/*daily-db* | wc -l) - 7)"
    stock_attach="$(expr $(ls -d $BACKUP_DIRECTORY/*daily-attachments* | wc -l) - 7)"

    if [[ $stock_db -gt 0 ]]; then
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*daily-db* | tail -$stock_db)
    fi

    if [[ $stock_attach -gt 0 ]]; then
        cd $BACKUP_DIRECTORY && rm $(ls -t $BACKUP_DIRECTORY/*daily-attachments* | tail -$stock_attach)
    fi
}

main() {
    [ -z "$1" ] && usage && return 0
    local cmd; cmd=$1; shift
    #
    [ "$cmd" = "save" ] && { save "$@"; return $?; }
    [ "$cmd" = "clean" ] && { clean "$@"; return $?; }
    action "$cmd" "$@"
}

main "$@"
