version: '3.2'
services:
    # On sections environment,
    # If comment start with R
    #   It means this environment is Required
    # Else
    #   It's optionnal
    portal:
        image: coopengo/portal${CUSTOMER}:${PORTAL_VERSION}
        build:
            context: .
            dockerfile: docker/portal/Dockerfile
        container_name: ${NETWORK_NAME}-portal
        networks:
            - main
        entrypoint:
            - ep
        command:
            - server
    app-b2c:
        image: coopengo/app-b2c${CUSTOMER}:${APP_B2C_VERSION}
        build:
            context: .
            dockerfile: docker/app-b2c/Dockerfile
        container_name: ${NETWORK_NAME}-app-b2c
        networks:
            - main
        entrypoint:
            - ep
        command:
            - server
    gateway:
        # Le containeur doit être accessible via nginx ou un outil similaire
        image: coopengo/gateway${CUSTOMER}:${GATEWAY_VERSION}
        build:
            context: .
            dockerfile: docker/gateway/Dockerfile
        container_name: ${NETWORK_NAME}-gateway
        env_file:
            - .env
        networks:
            - main 
        depends_on:
            - mongo
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ----------FILTRE URLS---------- #
            WHITELIST: ${GATEWAY_WHITELIST}              # R URLs des connections authorisées, séparé par des virgules.
            COOG_PORTAL_URL: ${COOG_PORTAL_URL}              # R URL du serveur déployant portal
            COOG_GATEWAY_URL: ${COOG_GATEWAY_URL}              # R URL du serveur déployant portal
            COOG_GATEWAY_BASE_PATH: ${COOG_GATEWAY_BASE_PATH}              # R URL du serveur déployant portal
             
            # -------------MONGO------------- #
            MONGO_HOST: ${NETWORK_NAME}-mongo            # R URL du serveur mongo
            MONGO_PORT: ${MONGO_PORT}                    # R Port utilisé pour la connection a mongo
            MONGO_DB_NAME: ${GATEWAY_MONGO_DB_NAME}      # O Nom de la base de donnée mongo à utilisé par Gateway
            MONGO_USER: ${MONGO_USER}                 # O Utilisateur de connection à mongo si l'accès est protégé
            MONGO_PASSWORD: ${MONGO_PASSWORD}         # O Mot de passe utilisateur mongo

            # --------------JWT-------------- #
            JWT_ENCRYPTION: ${JWT_ENCRYPTION}                # R Chaine de caractère utilisé pour le hashage JWT
            JWT_INTERNAL_ENCRYPTION: ${JWT_INTERNAL_ENCRYPTION}                # R Chaine de caractère utilisé pour le hashage JWT
            JWT_EXPIRATION: ${JWT_EXPIRATION}            # R Durée de vie du JWT

            # -------------COOG-------------- #
            COOG_URL: ${COOG_URL}
            COOG_DB_NAME: ${COOG_DB_NAME}
            COOG_WEB_TOKEN: ${GATEWAY_WEB_TOKEN}         # R A récupérer après avoir lancé Coog et initier un Jeton
            COOG_API_URL: ${COOG_API_URL}                # R URL du serveur déployant API V1
            COOG_API_B2C_URL: ${COOG_API_B2C_URL}        # R URL du serveur déployant API B2C
            COOG_API_URL_V2: ${COOG_API_URL_V2}          # R URL du serveur déployant API V2
            COOG_API_REFERENTIAL_URL: ${COOG_API_REFERENTIAL_URL}          # R URL du serveur déployant API V2
            COOG_API_B2B_CONFIG_URL: ${COOG_API_B2B_CONFIG_URL}          # R URL du serveur déployant API V2
            COOG_API_IDENTITY_MANAGER_URL: ${COOG_API_IDENTITY_MANAGER_URL}                # R URL du serveur déployant API V1

            ####################################
            # -----------CONNECTION----------- #
            ####################################

            # -------------BASIC-------------- #
            COOG_MODULE: ${COOG_MODULE}                  # O Basic auth via COOG
    api-referential:
        image: coopengo/api-referential${CUSTOMER}:${API_REFERENTIAL_VERSION}
        build:
            context: .
            dockerfile: docker/api-referential/Dockerfile
        container_name: ${NETWORK_NAME}-api-referential
        networks:
            - main
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ------------COOG--------------- #
            COOG_URL: ${COOG_URL}       # R URL du serveur déployant Coog
            COOG_DB_NAME: ${COOG_DB_NAME}                # R Nom de la base de donnée Coog

            JWT_INTERNAL_ENCRYPTION: ${JWT_INTERNAL_ENCRYPTION}                # R Chaine de caractère utilisé pour le hashage JWT
    api-b2b-config:
        image: coopengo/api-b2b-config${CUSTOMER}:${API_B2B_CONFIG_VERSION}
        build:
            context: .
            dockerfile: docker/api-b2b-config/Dockerfile
        container_name: ${NETWORK_NAME}-api-b2b-config
        networks:
            - main
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ------------COOG--------------- #
            COOG_URL: ${COOG_URL}       # R URL du serveur déployant Coog
            COOG_DB_NAME: ${COOG_DB_NAME}                # R Nom de la base de donnée Coog

            JWT_INTERNAL_ENCRYPTION: ${JWT_INTERNAL_ENCRYPTION}                # R Chaine de caractère utilisé pour le hashage JWT
            # -------------MONGO------------- #
    api:
        image: coopengo/api${CUSTOMER}:${API_VERSION}
        build:
            context: .
            dockerfile: docker/api/Dockerfile
        container_name: ${NETWORK_NAME}-api
        env_file:
            - .env
        networks:
            - main
        depends_on:
            - mongo
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ------------COOG--------------- #
            COOG_URL: ${COOG_URL}       # R URL du serveur déployant Coog
            COOG_DB_NAME: ${COOG_DB_NAME}                # R Nom de la base de donnée Coog
            COOG_API_V1_URL: ${COOG_API_URL}

            JWT_INTERNAL_ENCRYPTION: ${JWT_INTERNAL_ENCRYPTION}                # R Chaine de caractère utilisé pour le hashage JWT
            # -------------MONGO------------- #
            MONGO_HOST: ${NETWORK_NAME}-mongo            # R URL du serveur déployant Mongo
            MONGO_DB_PROTOCOL: mongodb                   # R Protocol de connection a Mongo,
                                                         #   à supprimer prochainement car mongodb est le protocol standard
            MONGO_DB_NAME: ${API_MONGO_DB_NAME}          # O Nom de la base de données mongo a utiliser, default: coog-api-V2
            MONGO_USER: ${MONGO_USER}                 # O Utilisateur de connection à mongo si l'accès est protégé
            MONGO_PASSWORD: ${MONGO_PASSWORD}         # O Mot de passe utilisateur mongo
    api-b2c:
        image: coopengo/api-b2c${CUSTOMER}:${API_B2C_VERSION}
        build:
            context: .
            dockerfile: docker/api-b2c/Dockerfile
        container_name: ${NETWORK_NAME}-api-b2c
        networks:
            - main
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ------------COOG--------------- #
            COOG_URL: ${COOG_URL}                                      # R URL du serveur déployant Coog
            COOG_DB_NAME: ${COOG_DB_NAME}                              # R Nom de la base de donnée Coog

            COOG_DOCUMENT_TOKEN_SECRET: ${COOG_DOCUMENT_TOKEN_SECRET}  # O 
            JWT_INTERNAL_ENCRYPTION: ${JWT_INTERNAL_ENCRYPTION}        # R Chaine de caractère utilisé pour le hashage JWT
    api-identity-manager:
        image: coopengo/api-identity-manager${CUSTOMER}:${API_IDENTITY_VERSION}
        build:
            context: .
            dockerfile: docker/api-identity-manager/Dockerfile
        container_name: ${NETWORK_NAME}-api-identity-manager
        networks:
            - main
        depends_on:
            - mongo
        environment:
            ###################################
            # ----------PARAMETRAGE---------- #
            ###################################
            
            # ------------COOG--------------- #
            COOG_URL: ${COOG_URL}       # R URL du serveur déployant Coog
            COOG_DB_NAME: ${COOG_DB_NAME}                # R Nom de la base de donnée Coog

            JWT_INTERNAL_ENCRYPTION: ${JWT_INTERNAL_ENCRYPTION}                # R Chaine de caractère utilisé pour le hashage JWT
            # -------------MONGO------------- #
            MONGO_HOST: ${NETWORK_NAME}-mongo            # R URL du serveur déployant Mongo
            MONGO_DB_PROTOCOL: mongodb                   # R Protocol de connection a Mongo,
                                                         #   à supprimer prochainement car mongodb est le protocol standard
            MONGO_DB_NAME: ${API_IDENTITY_MONGO_DB_NAME} # O Nom de la base de données mongo a utiliser, default: coog-api-identity-manager
            MONGO_USER: ${MONGO_USER}                 # O Utilisateur de connection à mongo si l'accès est protégé
            MONGO_PASSWORD: ${MONGO_PASSWORD}         # O Mot de passe utilisateur mongo
    mongo:
        image: ${MONGO_IMAGE}
        container_name: ${NETWORK_NAME}-mongo
        volumes:
            - ${COOG_DATA_DIR}/mongo:/data/db
        networks:
            - main
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
networks:
    main:
        external:
            name: ${NETWORK_NAME} # Default = utilisateur courant
