#!/bin/bash

if [ -z "$COOG_CODE_DIR" ] || [ ! -d "$COOG_CODE_DIR" ] || [ -z "$COOG_DATA_DIR" ]
then
    {
        echo "Please make sure that these two env vars are set:"
        echo "  COOG_CODE_DIR: your coog-admin install folder"
        echo "  COOG_DATA_DIR: the folder where to keep your custom config"
    } >&2 && exit 1
fi

_build() {
    ( cd "$COOG_CODE_DIR/images/web" && ./build "$@" )
}

_args() {
    local args
    args="$args -e COOG_API_REDIS_URL=//$NETWORK_NAME-redis:6379 -e COOG_API_REDIS_DB=$WEB_REDIS_DB"
    args="$args -e COOG_API_COOG_URL=http://$NETWORK_NAME-nginx:80 -e COOG_API_COOG_DB=$COOG_DB_NAME"
    [ ! -z "$DEBUG" ] && args="$args -e DEBUG=$DEBUG"
    echo "$args"
}

_run() {
    docker run \
        $DOCKER_DAEMON_OPTS \
        --network "$NETWORK_NAME" \
        --name "$NETWORK_NAME-web" \
        $(_args) "$WEB_IMAGE" "$@"
}

_docker() {
    docker "$@" "$NETWORK_NAME-web"
}

usage() {
    echo
    echo Available commands
    echo
    echo "  build     -> build web image: <tag> <repo:branch>+"
    echo "  run       -> runs a web docker image"
    echo "  <action>  -> calls docker action on web container"
    echo
}

main() {
    source "$COOG_CODE_DIR/config"
    [ -z "$1" ] && usage && return 0
    local cmd; cmd="$1"; shift
    [ "$cmd" = "build" ] && { _build "$@"; return $?; }
    [ "$cmd" = "run" ] && { _run "$@"; return $?; }
    _docker "$cmd" "$@"
}

main "$@"
