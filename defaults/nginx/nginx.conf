# number of nginx workers (just asynchronously forwarding)
# only 1 should be enough (2 recommended until we investigate more)
worker_processes 2;

# docker points the path to stderr
error_log /var/log/nginx/error.log;

include /etc/nginx/coog/main-custom.conf;

events {
    # number of opened connections per worker (both sides)
    # default limit is 1024 on OS
    # real value 2 x 16 x coog workers number
    # since we want to buffer and we don't have a strategy for worker_processes
    # => set to max
    worker_connections 1024;

    # accept immediately as many connection as it can
    multi_accept on;

    include /etc/nginx/coog/events-custom.conf;
}

http {
    # docker points the path to stdout
    include /etc/nginx/mime.types;

    log_format coog '$time_iso8601 $remote_addr $request $upstream_http_rpc_method $status $request_length $bytes_sent $request_time $gzip_ratio';
    access_log /var/log/nginx/access.log coog;

    # timeout in seconds (nginx <-> client)
    # depends on heaviest transactions
    send_timeout NGINX_TIMEOUT;

    # timeout in seconds (nginx <-> backend)
    # depends on heaviest transactions
    proxy_send_timeout NGINX_TIMEOUT;
    proxy_read_timeout NGINX_TIMEOUT;

    include /etc/nginx/coog/http-coog.conf;
    include /etc/nginx/coog/http-web.conf;
    include /etc/nginx/coog/http-custom.conf;

    include /etc/nginx/coog/NGINX_SERVER_CONF;
}
