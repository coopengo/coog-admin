#!/bin/bash
# vim: set ft=sh:

get_dir() {
    local script_path; script_path=$(readlink -f "$0")
    local script_dir; script_dir=$(dirname "$script_path")
    echo "$script_dir"
}

set_args(){
    local args
    if [ ! -z "$ETL_ORIGIN_DB_HOST" ]
    then
        args="-e COOG_HOSTNAME=$ETL_ORIGIN_DB_HOST"
        if [ ! -z "$ETL_ORIGIN_DB_PORT" ]
        then
            args="$args -e COOG_PORT=$ETL_ORIGIN_DB_PORT"
        else
            args="$args -e COOG_PORT=5432"
        fi
    else
        args="$args -e COOG_HOSTNAME=$NETWORK_NAME-postgres -e COOG_PORT=5432"
    fi
    if [ ! -z "$ETL_TARGET_DB_HOST" ]
    then
        args="$args -e DW_HOSTNAME=$ETL_TARGET_DB_HOST"
        if [ ! -z "$ETL_TARGET_DB_PORT" ]
        then
            args="$args -e DW_PORT=$ETL_TARGET_DB_PORT"
        else
            args="$args -e DW_PORT=5432"
        fi
    else
        args="$args -e DW_HOSTNAME=$NETWORK_NAME-dwh -e DW_PORT=5432"
    fi
    args="$args -e COOG_USER=$ETL_ORIGIN_DB_USER"
    args="$args -e COOG_PASSWORD=$ETL_ORIGIN_DB_PASSWORD"
    args="$args -e COOG_DB=$ETL_ORIGIN_DB_NAME"
    args="$args -e DW_USER=$ETL_TARGET_DB_USER"
    args="$args -e DW_PASSWORD=$ETL_TARGET_DB_PASSWORD"
    args="$args -e DW_DB=$ETL_TARGET_DB_NAME"
    echo "$args"
}

_build() {
    (cd "$(get_dir)/images/etl" && ./build "$@")
}

_run() {
    docker run \
        $DOCKER_INTERACTIVE_OPTS \
        --network "$NETWORK_NAME" \
        --name "$NETWORK_NAME-etl" \
        $(set_args) \
        "$ETL_IMAGE"
}

usage() {
    echo
    echo "  Available commands "
    echo
    echo "  build               -> Build etl image"
    echo "  run                 -> Run etl image"
    echo "  <action>            -> Call docker action on etl container"
    echo
}

main() {
    source "$(get_dir)/config"
    #
    [ -z "$1" ] && usage && return 0

    local cmd; cmd="$1"; shift
    #
    [ "$cmd" = "build" ] && { _build "$@"; return $?; }
    [ "$cmd" = "run" ] && { _run "$@"; return $?; }
    docker "$@" "$NETWORK_NAME-etl"
}

main "$@"
