# vim: set ft=sh:
# This script sets coog administration environment

get_dir() {
    local script_path; script_path=$(readlink -f "$0")
    local script_dir; script_dir=$(dirname "$script_path")
    echo "$script_dir"
}

ip() {
    local exists
    exists=$(docker ps --format '{{.Names}}' | grep -cP ^"$1"\$)
    [ "$exists" -eq 0 ] && return 1
    docker inspect --format '{{.NetworkSettings.IPAddress}}' "$1"
}

#-------------------------------------------------------------------------------#
# GENERAL PURPOSE
#-------------------------------------------------------------------------------#

[ -z "$EDITOR" ] && EDITOR=nano
PREFIX=/usr/local/coog                        # where all custom data goes
[ ! -z "$COOG_DATA" ] && PREFIX="$COOG_DATA"  # can be set via $COOG_DATA
mkdir -p "$PREFIX"                            # make sure folder exists

NETWORK_NAME=$USER
[ -z "$DOCKER_DAEMON_OPTS" ] && DOCKER_DAEMON_OPTS="-d --restart always"
[ -z "$DOCKER_PIPED_OPTS" ] && DOCKER_PIPED_OPTS="--rm"
[ -z "$DOCKER_INTERACTIVE_OPTS" ] && DOCKER_INTERACTIVE_OPTS="-it --rm"

#-------------------------------------------------------------------------------#
# POSTGRES CONFIG
#-------------------------------------------------------------------------------#

POSTGRES_IMAGE=postgres:9.5-alpine      # docker image
POSTGRES_VOLUME=$PREFIX/postgres        # docker data volume

POSTGRES_USER=postgres                  # postgres user
POSTGRES_PASSWORD=postgres              # postgres password

COOG_DB_USER=$POSTGRES_USER             # coog pg user
COOG_DB_PASSWORD=$POSTGRES_PASSWORD     # coog pg password
COOG_DB_NAME=coog                       # coog pg db name

SENTRY_DB_USER=$POSTGRES_USER           # sentry db user
SENTRY_DB_PASSWORD=$POSTGRES_PASSWORD   # sentry db password
SENTRY_DB_NAME=sentry                   # sentry db db name

#-------------------------------------------------------------------------------#
# REDIS CONFIG
#-------------------------------------------------------------------------------#

REDIS_IMAGE=redis:3.2-alpine            # docker image
REDIS_VOLUME=$PREFIX/redis              # docker data volume

COOG_CACHE_DB=0                         # coog cache db name
COOG_CELERY_DB=1                        # coog celery db name
COOG_RQ_DB=2                            # coog rq db name
SENTRY_REDIS_DB=5                       # sentry db name
WEB_REDIS_DB=7                          # web db name

#-------------------------------------------------------------------------------#
# SENTRY CONFIG
#-------------------------------------------------------------------------------#

SENTRY_IMAGE=sentry:8                   # docker image
SENTRY_VOLUME=$PREFIX/sentry            # docker data volume
SENTRY_KEY=$PREFIX/sentry.key           # containers shared key

SENTRY_POSTGRES_HOST=                   # defaults to postgres container
SENTRY_POSTGRES_PORT=                   # defaults to postgres container

SENTRY_REDIS_HOST=                      # defaults to redis container
SENTRY_REDIS_PORT=                      # defaults to redis container

#-------------------------------------------------------------------------------#
# COOG CONFIG
#-------------------------------------------------------------------------------#

COOG_IMAGE=coog/coog                    # docker image
COOG_VOLUME=$PREFIX/coog                # docker data volume

COOG_POSTGRES_HOST=                     # defaults to postgres container
COOG_POSTGRES_PORT=                     # defaults to postgres container

COOG_REDIS_HOST=                        # defaults to redis container
COOG_REDIS_PORT=                        # defaults to redis container

COOG_SERVER_WORKERS="$(nproc)"          # server workers
COOG_CELERY_WORKERS="$(nproc)"          # celery workers

COOG_SENTRY_PROTOCOL=                   # defaults to http
COOG_SENTRY_HOST=                       # defaults to sentry container
COOG_SENTRY_PORT=                       # defaults to sentry container
COOG_SENTRY_PUB=
COOG_SENTRY_SEC=
COOG_SENTRY_PROJECT=

COOG_SESSION_SUPERPWD=super             # coog super password (not a user)
COOG_DB_LANG=fr                         # database locale - eg. fr_FR
COOG_CACHE_MODEL=                       # models cache size
COOG_CACHE_RECORD=                      # records cache size
COOG_CACHE_FIELD=                       # fields cache size
COOG_CACHE_COOG=                        # coog cache size

COOG_LOG_LEVEL=                         # python levels
COOG_ADMIN_EMAIL=example@coopengo.com   # application admin email address

#-------------------------------------------------------------------------------#
# WEB CONFIG
#-------------------------------------------------------------------------------#

WEB_IMAGE=coog/web                      # docker image

#-------------------------------------------------------------------------------#
# NGINX CONFIG
#-------------------------------------------------------------------------------#

NGINX_IMAGE=nginx:1-alpine              # docker image
NGINX_VOLUME=$PREFIX/nginx              # nginx conf folder
NGINX_PUB_PORT=80                       # host mapped port
NGINX_PUB_PORT_SSL=443                  # SSL host mapped port
NGINX_SSL_METHOD=                       # SSL method (LETSENCRYPT or CUSTOM_KEYS)
NGINX_SSL_SERVER_NAME=                  # SSL server name

#-------------------------------------------------------------------------------#
# PAYBOX CONFIG
#-------------------------------------------------------------------------------#

PAYBOX_IMAGE=coog/paybox:master
PAYBOX_PUB_PORT=3000
PAYBOX_COOG_USER=admin
PAYBOX_COOG_PASS=admin

#-------------------------------------------------------------------------------#
# SYNC CONFIG
#-------------------------------------------------------------------------------#

SYNC_IMAGE=coog/sync                    # docker image
SYNC_SRC=$COOG_VOLUME                   # source volume
SYNC_DEST=/home/$USER/.sync             # destination volume

#-------------------------------------------------------------------------------#
# BACKUP CONFIG
#-------------------------------------------------------------------------------#

BACKUP_DIRECTORY=/mnt/coog_backup

#-------------------------------------------------------------------------------#
# CUSTOMS
#-------------------------------------------------------------------------------#

[ ! -e "$PREFIX/config" ] &&
    cp "$(get_dir)/defaults/config" "$PREFIX/config" &&
    echo "# For an exhaustive variables list, checkout base config on $(get_dir)/config" >> "$PREFIX/config"
[ ! -e "$PREFIX/config" ] && exit 1
source "$PREFIX/config"
